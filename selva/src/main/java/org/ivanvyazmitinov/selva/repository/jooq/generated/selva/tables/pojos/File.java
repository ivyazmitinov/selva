/*
 * This file is generated by jOOQ.
 */
package org.ivanvyazmitinov.selva.repository.jooq.generated.selva.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public record File(
    Long id,
    String fileName,
    byte[] content
) implements Serializable {

    private static final long serialVersionUID = 1L;


    public File(File value) {
        this(
            value.id,
            value.fileName,
            value.content
        );
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final File other = (File) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fileName == null) {
            if (other.fileName != null)
                return false;
        }
        else if (!this.fileName.equals(other.fileName))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!Arrays.equals(this.content, other.content))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fileName == null) ? 0 : this.fileName.hashCode());
        result = prime * result + ((this.content == null) ? 0 : Arrays.hashCode(this.content));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("File (");

        sb.append(id);
        sb.append(", ").append(fileName);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
